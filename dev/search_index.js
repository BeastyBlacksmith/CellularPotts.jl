var documenterSearchIndex = {"docs":
[{"location":"#CellularPotts.jl","page":"CellularPotts.jl","title":"CellularPotts.jl","text":"","category":"section"},{"location":"","page":"CellularPotts.jl","title":"CellularPotts.jl","text":"Documentation for CellularPotts.jl","category":"page"},{"location":"API/#Core-functions","page":"Core functions","title":"Core functions","text":"","category":"section"},{"location":"API/","page":"Core functions","title":"Core functions","text":"CellularPotts.jl includes the following core functions.","category":"page"},{"location":"API/#Index","page":"Core functions","title":"Index","text":"","category":"section"},{"location":"API/","page":"Core functions","title":"Core functions","text":"Pages = [\"API.md\"]","category":"page"},{"location":"API/#Full-docs","page":"Core functions","title":"Full docs","text":"","category":"section"},{"location":"API/","page":"Core functions","title":"Core functions","text":"Modules = [CellularPotts]\nPages = [\"Core.jl\"]","category":"page"},{"location":"API/#CellularPotts.newCellState-Union{Tuple{T}, Tuple{Vector{Symbol}, Vector{T}, Vector{T}}} where T<:Integer","page":"Core functions","title":"CellularPotts.newCellState","text":"newCellState(names, volumes, counts)\n\nCreate a new cellTable where each row corresponds to a cell.\n\nBy default, this function generates a table with the following columns:\n\n======================================================================\n\nnames::Vector{Symbol}: List of names given to cells (e.g. :TCell)\n\ncellIDs::Vector{<:Integer}: A unqiue number given to a cell\n\ntypeIDs::Vector{<:Integer}: A number corresponding to the cell's name\n\nvolumes::Vector{<:Integer}: Number of grid squares occupied \n\ndesiredVolumes::Vector{<:Integer}: Desired number of grid square\n\nperimeters::Vector{<:Integer}: Cell boarder penality\n\ndesiredPerimeters::Vector{<:Integer}: Desired cell boarder penality\n\n======================================================================\n\nThe first row in the table is reserved for :Medium which is the name given to grid locations not belonging to any cell and is given an index of 0 (The first cell is given an index of 1).\n\nOf note, desiredPerimeters is calculated as the minimal perimeter given the cell's volume. \n\n\n\n\n\n","category":"method"}]
}
